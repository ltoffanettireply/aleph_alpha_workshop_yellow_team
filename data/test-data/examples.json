[
    {
      "question": "How many singers do we have?",
      "query": "SELECT count(*) FROM singer",
      "db_id": "concert_singer"
    },
    {
      "question": "What is the total number of singers?",
      "query": "SELECT count(*) FROM singer",
      "db_id": "concert_singer"
    },
    {
      "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
      "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
      "db_id": "concert_singer"
    },
    {
      "question": "What are the names, countries, and ages for every singer in descending order of age?",
      "query": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC",
      "db_id": "concert_singer"
    },
    {
      "question": "What is the average, minimum, and maximum age of all singers from France?",
      "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
      "db_id": "concert_singer"
    },
    {
      "question": "What is the average, minimum, and maximum age for all French singers?",
      "query": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",
      "db_id": "concert_singer"
    },
    {
      "question": "Show the name and the release year of the song by the youngest singer.",
      "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
      "db_id": "concert_singer"
    },
    {
      "question": "What are the names and release years for all the songs of the youngest singer?",
      "query": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",
      "db_id": "concert_singer"
    },
    {
      "question": "What are all distinct countries where singers above age 20 are from?",
      "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
      "db_id": "concert_singer"
    },
    {
      "question": "What are  the different countries with singers above age 20?",
      "query": "SELECT DISTINCT country FROM singer WHERE age  >  20",
      "db_id": "concert_singer"
    },
    {
      "question": "Show all countries and the number of singers in each country.",
      "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
      "db_id": "concert_singer"
    },
    {
      "question": "How many singers are from each country?",
      "query": "SELECT country ,  count(*) FROM singer GROUP BY country",
      "db_id": "concert_singer"
    },
    {
      "question": "List all song names by singers above the average age.",
      "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
      "db_id": "concert_singer"
    },
    {
      "question": "What are all the song names by singers who are older than average?",
      "query": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)",
      "db_id": "concert_singer"
    },
    {
      "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
      "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
      "db_id": "concert_singer"
    },
    {
      "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
      "query": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000",
      "db_id": "concert_singer"
    },
    {
      "question": "What is the maximum capacity and the average of all stadiums ?",
      "query": "select max(capacity), average from stadium",
      "db_id": "concert_singer"
    },
    {
      "question": "What is the average and maximum capacities for all stadiums ?",
      "query": "select avg(capacity) ,  max(capacity) from stadium",
      "db_id": "concert_singer"
    },
    {
      "question": "What is the name and capacity for the stadium with highest average attendance?",
      "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
      "db_id": "concert_singer"
    },
    {
      "question": "What is the name and capacity for the stadium with the highest average attendance?",
      "query": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",
      "db_id": "concert_singer"
    },
    {
      "question": "Find the number of pets whose weight is heavier than 10.",
      "query": "SELECT count(*) FROM pets WHERE weight  >  10",
      "db_id": "pets_1"
    },
    {
      "question": "How many pets have a greater weight than 10?",
      "query": "SELECT count(*) FROM pets WHERE weight  >  10",
      "db_id": "pets_1"
    },
    {
      "question": "Find the weight of the youngest dog.",
      "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
      "db_id": "pets_1"
    },
    {
      "question": "How much does the youngest dog weigh?",
      "query": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1",
      "db_id": "pets_1"
    },
    {
      "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
      "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
      "db_id": "pets_1"
    },
    {
      "question": "List the maximum weight and type for each type of pet.",
      "query": "SELECT max(weight) ,  petType FROM pets GROUP BY petType",
      "db_id": "pets_1"
    },
    {
      "question": "Find number of pets owned by students who are older than 20.",
      "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
      "db_id": "pets_1"
    },
    {
      "question": "How many pets are owned by students that have an age greater than 20?",
      "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20",
      "db_id": "pets_1"
    },
    {
      "question": "Find the number of dog pets that are raised by female students (with sex F).",
      "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
      "db_id": "pets_1"
    },
    {
      "question": "How many dog pets are raised by female students?",
      "query": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'",
      "db_id": "pets_1"
    },
    {
      "question": "Find the number of distinct type of pets.",
      "query": "SELECT count(DISTINCT pettype) FROM pets",
      "db_id": "pets_1"
    },
    {
      "question": "How many different types of pet are there?",
      "query": "SELECT count(DISTINCT pettype) FROM pets",
      "db_id": "pets_1"
    },
    {
      "question": "Find the first name of students who have cat or dog pet.",
      "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
      "db_id": "pets_1"
    },
    {
      "question": "What are the first names of every student who has a cat or dog as a pet?",
      "query": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'",
      "db_id": "pets_1"
    },
    {
      "question": "Find the first name of students who have both cat and dog pets .",
      "query": "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'",
      "db_id": "pets_1"
    },
    {
      "question": "What are the students' first names who have both cats and dogs as pets?",
      "query": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'",
      "db_id": "pets_1"
    },
    {
      "question": "Find the major and age of students who do not have a cat pet.",
      "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
      "db_id": "pets_1"
    },
    {
      "question": "What major is every student who does not own a cat as a pet, and also how old are they?",
      "query": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",
      "db_id": "pets_1"
    },
    {
      "question": "Find the id of students who do not have a cat pet.",
      "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
      "db_id": "pets_1"
    },
    {
      "question": "What are the ids of the students who do not own cats as pets?",
      "query": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'",
      "db_id": "pets_1"
    },
    {
      "question": "How many continents are there?",
      "query": "SELECT count(*) FROM CONTINENTS;",
      "db_id": "car_1"
    },
    {
      "question": "What is the number of continents?",
      "query": "SELECT count(*) FROM CONTINENTS;",
      "db_id": "car_1"
    },
    {
      "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
      "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
      "db_id": "car_1"
    },
    {
      "question": "For each continent, list its id, name, and how many countries it has?",
      "query": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",
      "db_id": "car_1"
    },
    {
      "question": "How many countries are listed?",
      "query": "SELECT count(*) FROM COUNTRIES;",
      "db_id": "car_1"
    },
    {
      "question": "How many countries exist?",
      "query": "SELECT count(*) FROM COUNTRIES;",
      "db_id": "car_1"
    },
    {
      "question": "How many models does each car maker produce? List maker full name, id and the number.",
      "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
      "db_id": "car_1"
    },
    {
      "question": "What is the full name of each car maker, along with its id and how many models it produces?",
      "query": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",
      "db_id": "car_1"
    },
    {
      "question": "Which model of the car has the minimum horsepower?",
      "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
      "db_id": "car_1"
    },
    {
      "question": "What is the model of the car with the smallest amount of horsepower?",
      "query": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;",
      "db_id": "car_1"
    },
    {
      "question": "Find the model of the car whose weight is below the average weight.",
      "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
      "db_id": "car_1"
    },
    {
      "question": "What is the model for the car with a weight smaller than the average?",
      "query": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)",
      "db_id": "car_1"
    },
    {
      "question": "Find the name of the makers that produced some cars in the year of 1970?",
      "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
      "db_id": "car_1"
    },
    {
      "question": "What is the name of the different car makers who produced a car in 1970?",
      "query": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';",
      "db_id": "car_1"
    },
    {
      "question": "Find the make and production time of the cars that were produced in the earliest year?",
      "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
      "db_id": "car_1"
    },
    {
      "question": "What is the maker of the carr produced in the earliest year and what year was it?",
      "query": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",
      "db_id": "car_1"
    },
    {
      "question": "Which distinct car models are the produced after 1980?",
      "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
      "db_id": "car_1"
    },
    {
      "question": "What are the different models for the cards produced after 1980?",
      "query": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;",
      "db_id": "car_1"
    },
    {
      "question": "How many car makers are there in each continents? List the continent name and the count.",
      "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
      "db_id": "car_1"
    },
    {
      "question": "What is the name of each continent and how many car makers are there in each one?",
      "query": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",
      "db_id": "car_1"
    },
    {
      "question": "Which country does Airline \"JetBlue Airways\" belong to?",
      "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
      "db_id": "flight_2"
    },
    {
      "question": "What country is Jetblue Airways affiliated with?",
      "query": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
      "db_id": "flight_2"
    },
    {
      "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
      "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
      "db_id": "flight_2"
    },
    {
      "question": "Which abbreviation corresponds to Jetblue Airways?",
      "query": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"",
      "db_id": "flight_2"
    },
    {
      "question": "List all airline names and their abbreviations in \"USA\".",
      "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
      "db_id": "flight_2"
    },
    {
      "question": "What are the airline names and abbreviations for airlines in the USA?",
      "query": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"",
      "db_id": "flight_2"
    },
    {
      "question": "List the airport code and name in the city of Anthony.",
      "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
      "db_id": "flight_2"
    },
    {
      "question": "Give the airport code and airport name corresonding to the city Anthony.",
      "query": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"",
      "db_id": "flight_2"
    },
    {
      "question": "How many airlines do we have?",
      "query": "SELECT count(*) FROM AIRLINES",
      "db_id": "flight_2"
    },
    {
      "question": "What is the total number of airlines?",
      "query": "SELECT count(*) FROM AIRLINES",
      "db_id": "flight_2"
    },
    {
      "question": "How many airports do we have?",
      "query": "SELECT count(*) FROM AIRPORTS",
      "db_id": "flight_2"
    },
    {
      "question": "Return the number of  airports.",
      "query": "SELECT count(*) FROM AIRPORTS",
      "db_id": "flight_2"
    },
    {
      "question": "How many flights do we have?",
      "query": "SELECT count(*) FROM FLIGHTS",
      "db_id": "flight_2"
    },
    {
      "question": "Return the number of flights.",
      "query": "SELECT count(*) FROM FLIGHTS",
      "db_id": "flight_2"
    },
    {
      "question": "Which airline has abbreviation 'UAL'?",
      "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
      "db_id": "flight_2"
    },
    {
      "question": "Give the airline with abbreviation 'UAL'.",
      "query": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"",
      "db_id": "flight_2"
    },
    {
      "question": "How many airlines are from USA?",
      "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
      "db_id": "flight_2"
    },
    {
      "question": "Return the number of airlines in the USA.",
      "query": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"",
      "db_id": "flight_2"
    },
    {
      "question": "Which city and country is the Alton airport at?",
      "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
      "db_id": "flight_2"
    },
    {
      "question": "Give the city and country for the Alton airport.",
      "query": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"",
      "db_id": "flight_2"
    },
    {
      "question": "How many employees are there?",
      "query": "SELECT count(*) FROM employee",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Count the number of employees",
      "query": "SELECT count(*) FROM employee",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Sort employee names by their age in ascending order.",
      "query": "SELECT name FROM employee ORDER BY age",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "List the names of employees and sort in ascending order of age.",
      "query": "SELECT name FROM employee ORDER BY age",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "What is the number of employees from each city?",
      "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Count the number of employees for each city.",
      "query": "SELECT count(*) ,  city FROM employee GROUP BY city",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Which cities do more than one employee under age 30 come from?",
      "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Find the cities that have more than one employee under age 30.",
      "query": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Find the number of shops in each location.",
      "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "How many shops are there in each location?",
      "query": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Find the manager name and district of the shop whose number of products is the largest.",
      "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "What are the manager name and district of the shop that sells the largest number of products?",
      "query": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "find the minimum and maximum number of products of all stores.",
      "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "What are the minimum and maximum number of products across all the shops?",
      "query": "SELECT min(Number_products) ,  max(Number_products) FROM shop",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Return the name, location and district of all shops in descending order of number of products.",
      "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
      "query": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Find the names of stores whose number products is more than the average number of products.",
      "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Which shops' number products is above the average? Give me the shop names.",
      "query": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "find the name of employee who was awarded the most times in the evaluation.",
      "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
      "db_id": "employee_hire_evaluation"
    },
    {
      "question": "Which employee received the most awards in evaluations? Give me the employee name.",
      "query": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1",
      "db_id": "employee_hire_evaluation"
    }
  ]